LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_unsigned.all;


ENTITY part5 IS 
   PORT ( SW   : IN  STD_LOGIC_VECTOR(7 DOWNTO 0);
          KEY  : IN  STD_LOGIC_VECTOR(1 DOWNTO 0);
          LEDR : OUT STD_LOGIC_VECTOR(9 DOWNTO 0);
          HEX5, HEX4, HEX3, HEX2, HEX1, HEX0 : OUT STD_LOGIC_VECTOR(6 DOWNTO 0));
END part5;

ARCHITECTURE Behavior OF part5 IS
   
	COMPONENT hex7seg
      PORT ( hex     : IN  STD_LOGIC_VECTOR(3 DOWNTO 0);
             display : OUT STD_LOGIC_VECTOR(6 DOWNTO 0));
   END COMPONENT;
   
	COMPONENT regn
      PORT ( R             : IN  STD_LOGIC_VECTOR(7 DOWNTO 0);
             Clock, Resetn : IN  STD_LOGIC;
             Q             : OUT STD_LOGIC_VECTOR(7 DOWNTO 0));
   END COMPONENT;
   SIGNAL A, B  : STD_LOGIC_VECTOR(7 DOWNTO 0);
   SIGNAL S     : STD_LOGIC_VECTOR(8 DOWNTO 0);
   SIGNAL carry : STD_LOGIC;
	
BEGIN
   
   
	
END Behavior;
         
			
			
			
			
			
			
			
LIBRARY ieee;
USE ieee.std_logic_1164.all;

ENTITY regn IS
   PORT ( R             : IN  STD_LOGIC_VECTOR(7 DOWNTO 0);
          Clock, Resetn : IN  STD_LOGIC;
          Q             : OUT STD_LOGIC_VECTOR(7 DOWNTO 0));
END regn;

ARCHITECTURE Behavior OF regn IS
BEGIN
   
	PROCESS (Clock, Resetn)
   BEGIN
      IF (Resetn = '0') THEN
         Q <= (OTHERS => '0');
      ELSIF (Clock'EVENT AND Clock = '1') THEN
         Q <= R;
      END IF;
   END PROCESS;
	
END Behavior;
         
			
			
			
			
			
			
			
LIBRARY ieee;
USE ieee.std_logic_1164.all;

ENTITY hex7seg IS
   PORT ( hex     : IN  STD_LOGIC_VECTOR(3 DOWNTO 0);
          display : OUT STD_LOGIC_VECTOR(6 DOWNTO 0));
END hex7seg;

ARCHITECTURE Behavior OF hex7seg IS
BEGIN
   --
   --       0  
   --      ---  
   --     |   |
   --    5|   |1
   --     | 6 |
   --      ---  
   --     |   |
   --    4|   |2
   --     |   |
   --      ---  
   --       3  
   --
   PROCESS (hex)
   BEGIN
      CASE hex IS
         WHEN "0000" => display <= "1000000";
         WHEN "0001" => display <= "1111001";
         WHEN "0010" => display <= "0100100";
         WHEN "0011" => display <= "0110000";
         WHEN "0100" => display <= "0011001";
         WHEN "0101" => display <= "0010010";
         WHEN "0110" => display <= "0000010";
         WHEN "0111" => display <= "1111000";
         WHEN "1000" => display <= "0000000";
         WHEN "1001" => display <= "0010000";
         WHEN "1010" => display <= "0001000";
         WHEN "1011" => display <= "0000011";
         WHEN "1100" => display <= "1000110";
         WHEN "1101" => display <= "0100001";
         WHEN "1110" => display <= "0000110";
         WHEN OTHERS => display <= "0001110";
      END CASE;
   END PROCESS;
END Behavior;
